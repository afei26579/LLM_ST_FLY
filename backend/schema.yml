openapi: 3.0.3
info:
  title: LLM ST FLY API
  version: 1.0.0
  description: 智能管理系统API文档
paths:
  /api/v1/auth/login/:
    post:
      operationId: api_v1_auth_login_create
      description: 用户登录API
      tags:
      - 认证
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
            examples:
              LoginExample:
                value:
                  username: admin
                  password: password123
                summary: Login Example
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: 登录成功，返回用户信息和JWT令牌
        '400':
          description: 登录失败，用户名或密码错误
  /api/v1/auth/register/:
    post:
      operationId: api_v1_auth_register_create
      description: 用户注册API
      tags:
      - 认证
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          description: 注册成功，返回用户信息和JWT令牌
        '400':
          description: 注册失败，提供的信息无效
  /api/v1/auth/token/:
    post:
      operationId: api_v1_auth_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/v1/auth/token/refresh/:
    post:
      operationId: api_v1_auth_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v1/auth/token/verify/:
    post:
      operationId: api_v1_auth_token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerifyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerifyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerifyRequest'
        required: true
      responses:
        '200':
          description: No response body
  /api/v1/auth/users/:
    get:
      operationId: api_v1_auth_users_list
      description: 用户管理视图集
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - 用户管理
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: api_v1_auth_users_create
      description: 用户管理视图集
      tags:
      - 用户管理
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/auth/users/{id}/:
    get:
      operationId: api_v1_auth_users_retrieve
      description: 用户管理视图集
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this 用户.
        required: true
      tags:
      - 用户管理
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_v1_auth_users_update
      description: 用户管理视图集
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this 用户.
        required: true
      tags:
      - 用户管理
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_v1_auth_users_partial_update
      description: 用户管理视图集
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this 用户.
        required: true
      tags:
      - 用户管理
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: api_v1_auth_users_destroy
      description: 用户管理视图集
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this 用户.
        required: true
      tags:
      - 用户管理
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/auth/users/me/:
    get:
      operationId: api_v1_auth_users_me_retrieve
      description: 返回当前登录用户的详细信息
      summary: 获取当前用户信息
      tags:
      - 用户管理
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    put:
      operationId: api_v1_auth_users_me_update
      description: 更新当前用户资料
      tags:
      - 用户管理
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_v1_auth_users_me_partial_update
      description: 更新当前用户资料
      tags:
      - 用户管理
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    LoginRequest:
      type: object
      description: 登录序列化器
      properties:
        username:
          type: string
          minLength: 1
          maxLength: 255
        password:
          type: string
          writeOnly: true
          minLength: 1
          title: 密码
      required:
      - password
      - username
    PaginatedUserList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PatchedUserRequest:
      type: object
      description: 用户序列化器
      properties:
        username:
          type: string
          minLength: 1
          title: 用户名
          description: 必填；长度为150个字符或以下；只能包含字母、数字、特殊字符“@”、“.”、“-”和“_”。
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: 电子邮件地址
          maxLength: 254
        password:
          type: string
          writeOnly: true
          minLength: 1
        first_name:
          type: string
          title: 名字
          maxLength: 150
        last_name:
          type: string
          title: 姓氏
          maxLength: 150
        phone:
          type: string
          title: 电话号码
          maxLength: 15
        avatar:
          type: string
          format: binary
          nullable: true
          title: 头像
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          title: 用户角色
        bio:
          type: string
          title: 个人简介
        groups:
          type: array
          items:
            type: integer
            title: 用户组
          title: 用户组
    RoleEnum:
      enum:
      - admin
      - staff
      - user
      type: string
      description: |-
        * `admin` - 管理员
        * `staff` - 工作人员
        * `user` - 普通用户
    TokenObtainPair:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - refresh
    TokenObtainPairRequest:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - password
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
      required:
      - access
    TokenRefreshRequest:
      type: object
      properties:
        refresh:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - refresh
    TokenVerifyRequest:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - token
    User:
      type: object
      description: 用户序列化器
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          title: 用户名
          description: 必填；长度为150个字符或以下；只能包含字母、数字、特殊字符“@”、“.”、“-”和“_”。
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: 电子邮件地址
          maxLength: 254
        first_name:
          type: string
          title: 名字
          maxLength: 150
        last_name:
          type: string
          title: 姓氏
          maxLength: 150
        phone:
          type: string
          title: 电话号码
          maxLength: 15
        avatar:
          type: string
          format: uri
          nullable: true
          title: 头像
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          title: 用户角色
        bio:
          type: string
          title: 个人简介
        date_joined:
          type: string
          format: date-time
          readOnly: true
          title: 加入日期
        is_active:
          type: boolean
          readOnly: true
          title: 有效
          description: 指明用户是否被认为是活跃的。以反选代替删除帐号。
        groups:
          type: array
          items:
            type: integer
            title: 用户组
          title: 用户组
      required:
      - date_joined
      - id
      - is_active
      - username
    UserProfile:
      type: object
      description: 用户资料序列化器（简化版）
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          title: 用户名
          description: 必填；长度为150个字符或以下；只能包含字母、数字、特殊字符“@”、“.”、“-”和“_”。
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: 电子邮件地址
          maxLength: 254
        first_name:
          type: string
          title: 名字
          maxLength: 150
        last_name:
          type: string
          title: 姓氏
          maxLength: 150
        phone:
          type: string
          title: 电话号码
          maxLength: 15
        avatar:
          type: string
          format: uri
          nullable: true
          title: 头像
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          readOnly: true
          title: 用户角色
        bio:
          type: string
          title: 个人简介
      required:
      - id
      - role
      - username
    UserRequest:
      type: object
      description: 用户序列化器
      properties:
        username:
          type: string
          minLength: 1
          title: 用户名
          description: 必填；长度为150个字符或以下；只能包含字母、数字、特殊字符“@”、“.”、“-”和“_”。
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: 电子邮件地址
          maxLength: 254
        password:
          type: string
          writeOnly: true
          minLength: 1
        first_name:
          type: string
          title: 名字
          maxLength: 150
        last_name:
          type: string
          title: 姓氏
          maxLength: 150
        phone:
          type: string
          title: 电话号码
          maxLength: 15
        avatar:
          type: string
          format: binary
          nullable: true
          title: 头像
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          title: 用户角色
        bio:
          type: string
          title: 个人简介
        groups:
          type: array
          items:
            type: integer
            title: 用户组
          title: 用户组
      required:
      - password
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
